@model FilmCritique.Entities.Model.Concrete.Movie
@{
    var comments = ViewBag.Comments as List<FilmCritique.Entities.Model.Concrete.UserReview>;
    var warningMessage = TempData["Warning"] as string;
}
<style>
    /* Video container'ı için stil */
    .video-container {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
        height: 0;
        overflow: hidden;
        max-width: 100%;
        background: #000;
        margin: 0 auto; /* Yatay ortalama */
    }

    /* Video wrapper'ı ortalamak için stil */
    .video-wrapper {
        display: flex;
        justify-content: center; /* Yatay ortalama */
        align-items: center; /* Dikey ortalama */
        height: 100%; /* Yüksekliği içeriğin yüksekliğine göre ayarlar */
    }

    /* iframe'i tam olarak yerleştirmek için stil */
    .video-container iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .movie-poster {
        max-width: 100%; /* Resmi container genişliğine göre sınırla */
        height: auto; /* Yüksekliği orantılı olarak ayarla */
        border-radius: 8px; /* Köşeleri yuvarla */
    }

    .movie-details {
        margin: 20px auto;
        max-width: 1200px;
        padding: 20px;
    }

    .movie-header {
        margin-bottom: 20px;
    }

    .movie-info {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

        .movie-info p {
            margin: 5px 0;
        }

    h3 {
        margin-top: 20px;
    }

    .info-list {
        list-style: none;
        padding: 0;
    }

        .info-list li {
            background: #f8f9fa;
            margin-bottom: 5px;
            padding: 10px;
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

    .text-center {
        text-align: center;
    }
</style>

<div class="movie-details border border-primary rounded shadow bg-black bg-opacity-25">
    <div class="movie-header text-center">
        <h1>@Model.MovieName</h1>
    </div>

    <div class="row">
        <div class="col-md-8">
            @if (!string.IsNullOrEmpty(Model.PhotoUrl))
            {
                <img src="@($"/images/moviePhotos/{Model.PhotoUrl}")" alt="Movie Poster" class="movie-poster" />
            }
        </div>
        <div class="col-md-4 movie-info">
            <p><strong>Release Date:</strong> @Model.ReleaseDate.ToString("MMMM dd, yyyy")</p>
            <p><strong>Duration:</strong> @Model.Duration minutes</p>
            <p>
                <strong>Actors:</strong>
                @if (Model.MovieActors != null && Model.MovieActors.Any())
                {
                    @foreach (var actor in Model.MovieActors)
                    {
                        @actor.Actor.FullName
                        if (actor != Model.MovieActors.Last())
                        {
                            @:,
                        }
                    }
                }
                else
                {
                    <span>No actors available.</span>
                }
            </p>

            <p>
                <strong>Directors:</strong>
                @if (Model.MovieDirectors != null && Model.MovieDirectors.Any())
                {
                    @foreach (var director in Model.MovieDirectors)
                    {
                        @director.Director.FullName
                        if (director != Model.MovieDirectors.Last())
                        {
                            @:,
                        }
                    }
                }
                else
                {
                    <span>No directors available.</span>
                }
            </p>
            <p><strong>Admin Rating:</strong> @Model.AdminRating / 10</p>
        </div>
    </div>

    <!-- Yorumlar -->
    <div class="mt-4">
        <h4>Comments</h4>
        @if (comments != null && comments.Any())
        {
            <ul>
                @foreach (var comment in comments)
                {
                    <li>
                        <strong>@comment.UserId:</strong> @comment.Comment - Rating: @comment.Rating
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No comments yet.</p>
        }
    </div>

    <!-- Uyarı Mesajı -->
    @if (!string.IsNullOrEmpty(warningMessage))
    {
        <div class="alert alert-warning">
            @warningMessage
        </div>
    }

    <!-- Yorum Ekleme Formu -->
    @if (User.Identity.IsAuthenticated)
    {
        <div class="mt-4">
            <h4>Add a Comment</h4>
            @using (Html.BeginForm("Comment", "Movie", FormMethod.Post))
            {
                <input type="hidden" name="id" value="@Model.Id" />
                <div class="form-group">
                    <label for="comment">Comment:</label>
                    <textarea id="comment" name="comment" class="form-control" rows="4" required></textarea>
                </div>
                <div class="form-group">
                    <label for="rating">Rating:</label>
                    <select id="rating" name="rating" class="form-control" required>
                        <option value="">Select Rating</option>
                        @for (int i = 1; i <= 10; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            You need to be logged in to add a comment.
        </div>
    }
</div>
